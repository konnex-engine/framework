/**
* Konnex Company API
* An API that allows for creating, reading, updating and deleting of Konnex User Company data.
*
* OpenAPI spec version: 1.0.0
* Contact: info@konnex-engine.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * CompaniesApi.h
 *
 * 
 */

#ifndef CompaniesApi_H_
#define CompaniesApi_H_


#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>


#include "Company.h"
#include "CompanyName.h"
#include "KeyValuePairs.h"
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class  CompaniesApi {
public:
    CompaniesApi(std::shared_ptr<Pistache::Rest::Router>);
    virtual ~CompaniesApi() {}
    void init();

    const std::string base = "/v1";

private:
    void setupRoutes();

    void create_company_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void delete_company_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void get_companies_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void get_company_by_id_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void update_company_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void companies_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    std::shared_ptr<Pistache::Rest::Router> router;

    /// <summary>
    /// Creates a new Company
    /// </summary>
    /// <remarks>
    /// Creates a new Konnex User Company in the database.
    /// </remarks>
    virtual void create_company(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// Delete company data.
    /// </summary>
    /// <remarks>
    /// Delete records for a specific Company.
    /// </remarks>
    /// <param name="companyID">The Company ID for the specific company.</param>
    virtual void delete_company(const int32_t &companyID, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// Retrieves all available Konnex User company data
    /// </summary>
    /// <remarks>
    /// Obtain information about Konnex users companies.
    /// </remarks>
    /// <param name="bodyLimit">The number of company records to return. (optional, default to 0)</param>
    /// <param name="pageLimit">The number of pages of company records to return. (optional, default to 0)</param>
    virtual void get_companies(const Pistache::Optional<int32_t> &bodyLimit, const Pistache::Optional<int32_t> &pageLimit, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// Retrieves data for a specific company
    /// </summary>
    /// <remarks>
    /// Obtain information for a specific company by company ID.
    /// </remarks>
    /// <param name="companyID">The Company ID for the specific company.</param>
    virtual void get_company_by_id(const int32_t &companyID, Pistache::Http::ResponseWriter &response) = 0;

    /// <summary>
    /// Update company data.
    /// </summary>
    /// <remarks>
    /// Update records for a specific Company.
    /// </remarks>
    /// <param name="companyID">The Company ID for the specific company.</param>
    /// <param name="keyValuePairs"> (optional)</param>
    virtual void update_company(const int32_t &companyID, const std::vector<KeyValuePairs> &keyValuePairs, Pistache::Http::ResponseWriter &response) = 0;

};

}
}
}
}

#endif /* CompaniesApi_H_ */

