/**
* Konnex Addresses API
* An API that allows for creating, reading, updating and deleting of Konnex Object Address data.
*
* OpenAPI spec version: 1.0.0
* Contact: info@konnex-engine.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

/*
* AddressesApiImpl.h
*
* 
*/

#ifndef ADDRESSES_API_IMPL_H_
#define ADDRESSES_API_IMPL_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <memory>

#include <AddressesApi.h>

#include <pistache/optional.h>

#include "Address.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class AddressesApiImpl : public org::openapitools::server::api::AddressesApi {
public:
    AddressesApiImpl(std::shared_ptr<Pistache::Rest::Router>);
    ~AddressesApiImpl() {}

    void create_address(const std::string &objectType, const int32_t &objectID, Pistache::Http::ResponseWriter &response);
    void delete_address(const std::string &objectType, const int32_t &objectID, const int32_t &addressID, Pistache::Http::ResponseWriter &response);
    void get_address_by_id(const std::string &objectType, const int32_t &objectID, const int32_t &addressID, Pistache::Http::ResponseWriter &response);
    void get_addresses(const std::string &objectType, const int32_t &objectID, const Pistache::Optional<int32_t> &bodyLimit, const Pistache::Optional<int32_t> &pageLimit, Pistache::Http::ResponseWriter &response);
    void update_address(const std::string &objectType, const int32_t &objectID, const int32_t &addressID, const Address &body, Pistache::Http::ResponseWriter &response);

};

}
}
}
}



#endif