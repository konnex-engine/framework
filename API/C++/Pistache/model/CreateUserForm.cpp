/**
* Konnex User API
* An API that allows for creating, reading, updating and deleting of Konnex User data.
*
* OpenAPI spec version: 1.0.0
* Contact: info@konnex-engine.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CreateUserForm.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CreateUserForm::CreateUserForm()
{
    m_Email = "";
    m_Password = "";
    m_Username = "";
    m_UsernameIsSet = false;
    m_Full_nameIsSet = false;
    
}

CreateUserForm::~CreateUserForm()
{
}

void CreateUserForm::validate()
{
    // TODO: implement validation
}

nlohmann::json CreateUserForm::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["email"] = ModelBase::toJson(m_Email);
    val["password"] = ModelBase::toJson(m_Password);
    if(m_UsernameIsSet)
    {
        val["username"] = ModelBase::toJson(m_Username);
    }
    if(m_Full_nameIsSet)
    {
        val["full name"] = ModelBase::toJson(m_Full_name);
    }
    

    return val;
}

void CreateUserForm::fromJson(const nlohmann::json& val)
{
    setEmail(val.at("email"));
    setPassword(val.at("password"));
    if(val.find("username") != val.end())
    {
        setUsername(val.at("username"));
    }
    if(val.find("full name") != val.end())
    {
        if(!val["full name"].is_null())
        {
            CreateUserForm_full_name newItem;
            newItem.fromJson(val["full name"]);
            setFullName( newItem );
        }
        
    }
    
}


std::string CreateUserForm::getEmail() const
{
    return m_Email;
}
void CreateUserForm::setEmail(std::string const& value)
{
    m_Email = value;
    
}
std::string CreateUserForm::getPassword() const
{
    return m_Password;
}
void CreateUserForm::setPassword(std::string const& value)
{
    m_Password = value;
    
}
std::string CreateUserForm::getUsername() const
{
    return m_Username;
}
void CreateUserForm::setUsername(std::string const& value)
{
    m_Username = value;
    m_UsernameIsSet = true;
}
bool CreateUserForm::usernameIsSet() const
{
    return m_UsernameIsSet;
}
void CreateUserForm::unsetUsername()
{
    m_UsernameIsSet = false;
}
CreateUserForm_full_name CreateUserForm::getFullName() const
{
    return m_Full_name;
}
void CreateUserForm::setFullName(CreateUserForm_full_name const& value)
{
    m_Full_name = value;
    m_Full_nameIsSet = true;
}
bool CreateUserForm::fullNameIsSet() const
{
    return m_Full_nameIsSet;
}
void CreateUserForm::unsetFull_name()
{
    m_Full_nameIsSet = false;
}

}
}
}
}

