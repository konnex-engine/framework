/**
* Konnex Company API
* An API that allows for creating, reading, updating and deleting of Konnex User Company data.
*
* OpenAPI spec version: 1.0.0
* Contact: info@konnex-engine.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "KeyValuePairs.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

KeyValuePairs::KeyValuePairs()
{
    m_Key = "";
    m_KeyIsSet = false;
    m_Value = "";
    m_ValueIsSet = false;
    
}

KeyValuePairs::~KeyValuePairs()
{
}

void KeyValuePairs::validate()
{
    // TODO: implement validation
}

nlohmann::json KeyValuePairs::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_KeyIsSet)
    {
        val["key"] = ModelBase::toJson(m_Key);
    }
    if(m_ValueIsSet)
    {
        val["value"] = ModelBase::toJson(m_Value);
    }
    

    return val;
}

void KeyValuePairs::fromJson(const nlohmann::json& val)
{
    if(val.find("key") != val.end())
    {
        setKey(val.at("key"));
    }
    if(val.find("value") != val.end())
    {
        setValue(val.at("value"));
    }
    
}


std::string KeyValuePairs::getKey() const
{
    return m_Key;
}
void KeyValuePairs::setKey(std::string const& value)
{
    m_Key = value;
    m_KeyIsSet = true;
}
bool KeyValuePairs::keyIsSet() const
{
    return m_KeyIsSet;
}
void KeyValuePairs::unsetKey()
{
    m_KeyIsSet = false;
}
std::string KeyValuePairs::getValue() const
{
    return m_Value;
}
void KeyValuePairs::setValue(std::string const& value)
{
    m_Value = value;
    m_ValueIsSet = true;
}
bool KeyValuePairs::valueIsSet() const
{
    return m_ValueIsSet;
}
void KeyValuePairs::unsetValue()
{
    m_ValueIsSet = false;
}

}
}
}
}

