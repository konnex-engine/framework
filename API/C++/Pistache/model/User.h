/**
* Konnex User API
* An API that allows for creating, reading, updating and deleting of Konnex User data.
*
* OpenAPI spec version: 1.0.0
* Contact: info@konnex-engine.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * User.h
 *
 * Data model containing User info.
 */

#ifndef User_H_
#define User_H_


#include "ModelBase.h"

#include <string>
#include "User_name.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// Data model containing User info.
/// </summary>
class  User
    : public ModelBase
{
public:
    User();
    virtual ~User();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// User members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t const value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    std::string getUsername() const;
    void setUsername(std::string const& value);
    bool usernameIsSet() const;
    void unsetUsername();
    /// <summary>
    /// 
    /// </summary>
    User_name getName() const;
    void setName(User_name const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    std::string getContactdetailsHref() const;
    void setContactdetailsHref(std::string const& value);
    bool contactdetailsHrefIsSet() const;
    void unsetContactdetails_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getAddressesHref() const;
    void setAddressesHref(std::string const& value);
    bool addressesHrefIsSet() const;
    void unsetAddresses_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getImagesHref() const;
    void setImagesHref(std::string const& value);
    bool imagesHrefIsSet() const;
    void unsetImages_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getCompaniesHref() const;
    void setCompaniesHref(std::string const& value);
    bool companiesHrefIsSet() const;
    void unsetCompanies_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getProductsHref() const;
    void setProductsHref(std::string const& value);
    bool productsHrefIsSet() const;
    void unsetProducts_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getServicesHref() const;
    void setServicesHref(std::string const& value);
    bool servicesHrefIsSet() const;
    void unsetServices_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getEventsHref() const;
    void setEventsHref(std::string const& value);
    bool eventsHrefIsSet() const;
    void unsetEvents_href();
    /// <summary>
    /// 
    /// </summary>
    std::string getTeamsHref() const;
    void setTeamsHref(std::string const& value);
    bool teamsHrefIsSet() const;
    void unsetTeams_href();

protected:
    int32_t m_Id;
    bool m_IdIsSet;
    std::string m_Username;
    bool m_UsernameIsSet;
    User_name m_Name;
    bool m_NameIsSet;
    std::string m_Contactdetails_href;
    bool m_Contactdetails_hrefIsSet;
    std::string m_Addresses_href;
    bool m_Addresses_hrefIsSet;
    std::string m_Images_href;
    bool m_Images_hrefIsSet;
    std::string m_Companies_href;
    bool m_Companies_hrefIsSet;
    std::string m_Products_href;
    bool m_Products_hrefIsSet;
    std::string m_Services_href;
    bool m_Services_hrefIsSet;
    std::string m_Events_href;
    bool m_Events_hrefIsSet;
    std::string m_Teams_href;
    bool m_Teams_hrefIsSet;
};

}
}
}
}

#endif /* User_H_ */
